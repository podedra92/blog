import{_ as s,o as a,c as e,U as o}from"./chunks/framework.dab3cab5.js";const n="/blog/assets/awesome-sauce.b7af5431.gif",t="/blog/assets/alone.3d7777dd.gif",l="/blog/assets/go-live.8ce466f0.gif",g=JSON.parse('{"title":"How I created this awesome blog!","description":"","frontmatter":{"title":"How I created this awesome blog!","tags":"documentation,tips","lastUpdated":true},"headers":[],"relativePath":"learning/docs/this-blog.md"}'),p={name:"learning/docs/this-blog.md"},r=o('<h1 id="how-i-created-this-awesome-blog" tabindex="-1">How I created this awesome blog! <a class="header-anchor" href="#how-i-created-this-awesome-blog" aria-label="Permalink to &quot;How I created this awesome blog!&quot;">​</a></h1><p>I&#39;m going to give you the secret sauce!<br> Although not overly impressive, I did spend a good day wondering what to work with and went ahead and published it.<br> This page will share the tech used with a quick how to, try not to be too in awe!!</p><p><img src="'+n+'" alt="sauce"></p><h2 id="tech-stack" tabindex="-1">Tech stack <a class="header-anchor" href="#tech-stack" aria-label="Permalink to &quot;Tech stack&quot;">​</a></h2><h3 id="vitepress" tabindex="-1">Vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;Vitepress&quot;">​</a></h3><p>VitePress is a static site generator for Vue.js that is built on top of the Vite build tool. It is worth noting I wanted to play with Vue, VitePress allowed me to do so, so docusauras and jekyll were out the running.</p><p>You&#39;re probably wondering why not use VuePress, it&#39;s more mature and both are static site generators. It&#39;s documentation is more complete and its more customisable.</p><p>VitePress is a newer currently in alpha, they may introduce breaking changes and their concern is focused on performance (not really a bonus for me at this stage) and ease of use (more of a winner). Its opinionated allowing me to just focus on content, whilst allowing to delve into a bit of Vue by injecting components.</p><p>For me I&#39;d end up in a bit of a rabbit hole, spend days customising the whole blog and looking up the latest plugins....<br> I just didn&#39;t need the distraction, I just want to write to an MD file and publish, whilst also allowing me to create custom components to play with Vue a bit.</p><p>That&#39;s my retrospective reasoning, the real reason is I was going to quickly PoC both, but once I had setup vitepress I thought why bother. <br><a href="https://www.youtube.com/watch?v=VO6XEQIsCoM&amp;ab_channel=TED" target="_blank" rel="noreferrer">See paradox of choice.</a></p><p>So the quick win was vitepress, doesn&#39;t mean its the right choice but for now it will suffice.</p><h3 id="github-pages" tabindex="-1">Github Pages <a class="header-anchor" href="#github-pages" aria-label="Permalink to &quot;Github Pages&quot;">​</a></h3><p>The question of where to host, should I go Azure Static Web App, S3 or firebase? I could&#39;ve placed the compiled site anywhere really, but I quickly landed on GitHub Pages.<br> Its a free service offered by GitHub that allows the hosting of websites directly from a GitHub repository (published using github actions of course).</p><p>This for now seems like the easiest and obvious solution as I was already pushing my code to my git repo. By default you will get a domain ending in <code>github.io</code>, obviously there is nothing stopping you from creating your own cname.</p><p>For me and my one visitor (me proof reading when on the train) it is more than capable of handling the the load...</p><p><img src="'+t+`" alt="alone"></p><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Always refer to the <a href="https://vitepress.vuejs.org/guide/getting-started" target="_blank" rel="noreferrer">VitePress getting started docs here.</a><br> However I&#39;ve listed some steps with some gotchas below!</p><h3 id="initial-vitepress-project" tabindex="-1">Initial VitePress Project <a class="header-anchor" href="#initial-vitepress-project" aria-label="Permalink to &quot;Initial VitePress Project&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Initialize a new Yarn package</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Add vitepress and vue as development dependencies</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vitepress</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue</span></span>
<span class="line"></span></code></pre></div><p>So the init creates a package.json file, containing information about the project and its dependencies.</p><p>The second command, <code>yarn add</code>, adds the vitepress and vue packages to the project. The --dev flag indicate these dependencies are only required during development.</p><p>Next you can nest the following to the package.json.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">docs:dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress dev docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">docs:build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress build docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">docs:preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress preview docs</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Example <code>package.json</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">license</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MIT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">devDependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">vitepress</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress dev docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress build docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress preview docs</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Why, well the the scripts json object is as expected, key-value pairs, the key is the command to run in the terminal, the values are the command that will be executed.</p><p>So instead of <code>yarn vitepress dev docs</code> you would just enter <code>yarn docs:dev</code> into your terminal.</p><p>What does each command do:</p><ul><li><strong>docs:dev</strong> - Starts a development server for the documentation locally.</li><li><strong>docs:build</strong> - Builds the documentation for production.</li><li><strong>docs:preview</strong> - Runs/previews the build artifacts locally</li></ul><h3 id="add-content" tabindex="-1">Add content <a class="header-anchor" href="#add-content" aria-label="Permalink to &quot;Add content&quot;">​</a></h3><p>So now to add the content. My general folder structure is:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ .github</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ docs</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ .vitepress</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ components</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ public</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ category_dir</span></span>
<span class="line"><span style="color:#A6ACCD;">│     ├─ assets</span></span>
<span class="line"><span style="color:#A6ACCD;">│     │  └─ sub_category_assets_dir</span></span>
<span class="line"><span style="color:#A6ACCD;">│     ├─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">│     └─ sub_category_dir</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ package.json</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Ok lets have a quick look at the structure - you dont need to necessarily follow this but it&#39;s a structure that works for me.</p><ul><li><strong>.github:</strong> This dir currently contains workflows, just one for now to deploy the site.</li><li><strong>docs:</strong> Contains config components and markdown files, equivelant to src.</li><li><strong>.vitepress:</strong> Contains config and custom themes, it also contains dist and cache remember to add these to your .gitignore! I may however move this to the root of the project, so docs directory contain just that.</li><li><strong>components:</strong> Where I store custom Vue components</li><li><strong>public:</strong> So this is a bit of an escape hatch, it copies these over as static assets, classified as those which aren&#39;t referenced within documentation (e.g. themeConfig logo). These assets are copied over to the root of the dist directory, and the name is not appended with a hash.</li></ul><p>While we&#39;re on this topic, I try to categorise my docs, and also create nested directories such as <code>sub_category_dir</code>, the same principal is used within the assets directory. <br> Again you may choose your own structure but it feels the most logical approach for me, for now.</p><details class="details custom-block"><summary>Nav/Menu tips</summary><p>We define our navs within .vitepress/config.js.</p><p>So the main nav bar is relatively straight forward, define text and path to the dir. Each dir should contain an index.md for the page to display a homepage.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">nav: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;my first category&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> link</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;/category_dir</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">/&#39; </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;my second category&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> link</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;/category_dir</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">/&#39; </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><br> To allow for navigation within the category directory to all the sub categories, I&#39;ve added a sidebar.<br> If a sub-category contains more than one markdown file I&#39;ve defined a collabsible menu, just to make it a bit easier to navigate. <div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sidebar: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &#39;/category_dir1/&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;Introduction&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;Category Home&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> link</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;/category_dir</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">/&#39; </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;sub_category_dir</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      collapsible</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">      collapsed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">      items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;Markdown file </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> link</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;/category_dir</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">/sub_category_dir</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">/&lt;markdown-file-without-extention&gt;&#39; </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;Markdown file </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> link</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;/category_dir</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">/sub_category_dir</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">/&lt;markdown-file-without-extention&gt;&#39; </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;"> .....</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></details><h3 id="publish" tabindex="-1">Publish <a class="header-anchor" href="#publish" aria-label="Permalink to &quot;Publish&quot;">​</a></h3><p>Great so I have my blog and it seems to work locally now what?</p><p><img src="`+l+'" alt="live"></p><p>Get yourself a github account, create a project and push your vitepress code!</p><p>Ok so I wont put the whole workflow in here but you can visit <a href="https://vitepress.vuejs.org/guide/deploying#github-pages" target="_blank" rel="noreferrer">Vitepress deployment docs</a> to see it, or visit my repo.</p><p>Now its worth noting I&#39;m doing something bad and not linting my markdown files, this should probably be included within my workflow.<br> I&#39;ll also try quickly define each step:</p><ul><li>Checkout the repository using actions/checkout@v3.</li><li>Download specified version of Node.js using actions/setup-node@v3 action.</li><li><code>yarn install --frozen-lockfile</code> this installs project dependencies, the flag uses package-lock file.</li><li><code>yarn docs:build</code> to build the documentation.</li><li>We leverage <code>peaceiris/actions-gh-pages@v3</code> action, specifying the build artifacts path from step above (typically .vitepress/dist), I&#39;ve also set an additional variable <code>enable_jekyll: false</code>. Ultimately this pushes the build artifacts to a branch, default is gh-pages.</li></ul><p>Now this part is magic...</p><p>When files are pushed to the <code>gh-pages</code> branch, a bot triggers a workflow to serve the site at <code>&lt;username&gt;.github.io/&lt;projectname&gt;</code>.</p><p>We could potentially use <code>actions/deploy-pages@v1</code> to deploy to GitHub pages in place of <code>peaceiris/actions-gh-pages@v3</code>, thus publishing directly from main, but having a quick look <code>peaceiris/actions-gh-pages@v3</code> it does add and delete some files so this would need to be accounted for, so I may revisit this later, but for now I will leave as is.</p><p>Anyhow once the automated run has completed on branch gh-pages you are good to go!</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If all your assets are missing and you&#39;re greeted with 404 you may be missing your base path.<br> So within <code>.vitepress/config.js</code> add <code>base: &#39;/&lt;projectName&gt;/&#39;</code></p></div><h2 id="downsides" tabindex="-1">Downsides <a class="header-anchor" href="#downsides" aria-label="Permalink to &quot;Downsides&quot;">​</a></h2><p><strong>VitePress:</strong></p><ul><li><p>Requires you to have some knowledge of Vue.js - it&#39;s all possible without, but it may add some time for adding custom components.</p></li><li><p>Its relatively new, so it doesn&#39;t have as many features or plugins</p></li><li><p>Currently no out the box search, I&#39;ve installed a plugin, which works locally but no luck once published!</p></li></ul><p><strong>GitHub Pages:</strong></p><p>For free hosting its great, can&#39;t complain too much, and for such a small blog its fine!<br> A potential drawback is the repository containing the blog must be Public, unless you&#39;re using github pro or enterprise.</p><p>This isn&#39;t really an issue for me though!</p>',55),c=[r];function i(y,d,D,u,h,C){return a(),e("div",null,c)}const A=s(p,[["render",i]]);export{g as __pageData,A as default};
