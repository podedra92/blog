import{_ as s,o as n,c as a,U as l}from"./chunks/framework.dab3cab5.js";const p="/blog/assets/team-access.55924a86.png",o="/blog/assets/gotme.e8f1fc13.gif",u=JSON.parse('{"title":"OPA & Envoy pt2.","description":"","frontmatter":{"title":"OPA & Envoy pt2.","tags":"documentation,tips","lastUpdated":true},"headers":[],"relativePath":"learning/auth/opa-envoy-pt2.md"}'),e={name:"learning/auth/opa-envoy-pt2.md"},t=l('<h1 id="authn-authz-using-opa-envoy-part-2" tabindex="-1">Authn &amp; Authz using OPA &amp; Envoy Part 2 <a class="header-anchor" href="#authn-authz-using-opa-envoy-part-2" aria-label="Permalink to &quot;Authn &amp; Authz using OPA &amp; Envoy Part 2&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>So in <a href="./opa-envoy">part 1</a> we introduced what we&#39;re doing, created our app registrations within Azure AD and retrieved our token, now we&#39;ll look to continue with our PoC &amp; test it out.</p><h2 id="implement" tabindex="-1">Implement <a class="header-anchor" href="#implement" aria-label="Permalink to &quot;Implement&quot;">​</a></h2><p>I&#39;m probably about to present the scenario in the worst possible way...<br> But what we want is for the teams to authenticate using their respective tokens.<br> What the teams have access to is determined by our team role, so the roles and endpoints shown in the diag below is what we will look to create.</p><p>Note: Green is permit, red is deny..</p><p><img src="'+p+`" alt="endpoints"></p><h3 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h3><p>In our <a href="https://github.com/podedra92/opa-envoy" target="_blank" rel="noreferrer">repo here</a>, we have a dir called dummy-api, its a quick and nasty Fast API which has a couple of endpoints.</p><p><code>dummy-api/main.py:</code></p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/common</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">common</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/workspaces/</span><span style="color:#F78C6C;">{id}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">namespace</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;You have access to workspace </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">id</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/health</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">health</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">health</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>If I were to call <code>/common</code> endpoint, I&#39;d get the response <code>{&quot;message&quot;: &quot;common&quot;}</code>.<br> If I call <code>/workspaces/1</code> I would get the response <code>{&quot;message&quot;: &quot;You have access to workspace 1&quot;}</code>.</p><p>In our Dockerfile, we are just copying and running our app, on port 8080.</p><p><code>dummy-api/Dockerfile:</code></p><div class="language-docker"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> python:slim</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> pip install fastapi \\</span></span>
<span class="line"><span style="color:#A6ACCD;">pip install uvicorn</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> dummy-api/main.py /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;uvicorn&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;main:app&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;--host&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;0.0.0.0&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;--port&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;8080&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre></div><p>Finally we define our pod in our docker-compose, and add a port-forward so we can test it out:</p><p><code>docker-compose.yml</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">dummy-api</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dummy-api</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">dockerfile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dummy-api/Dockerfile</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">8080:8080</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>If we run <code>docker-compose up</code> the pod should run and be exposed on port 8080</p><p>Lets try a get request to our workspaces endpoint: <code>http://localhost:8080/workspaces/1</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">You have access to workspace 1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="envoy" tabindex="-1">Envoy <a class="header-anchor" href="#envoy" aria-label="Permalink to &quot;Envoy&quot;">​</a></h3><p>Ok so lets add in our AuthN, remember we&#39;re using Envoy here to handle this, it will act as a proxy for our service and should validate this token against Azure AD.<br></p><p>We&#39;ll need to put our yaml engineering hats on for this....</p><p>We&#39;ll want to configure some <code>static_resources</code> specifically <code>listeners</code> &amp; <code>clusters</code></p><p><code>envoy/config.yaml:</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">static_resources</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">listeners</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">socket_address</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0.0.0</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">port_value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8000</span></span>
<span class="line"></span></code></pre></div><p>Here we&#39;re simply declaring that we&#39;re listening on port 8000, next we&#39;ll add a filter so we can specify a route and decide what to do once that route has been matched.<br></p><p><code>envoy/config.yaml:</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">filter_chains</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">filters</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">envoy.filters.network.http_connection_manager</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">typed_config</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">codec_type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">auto</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">stat_prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ingress_http</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">route_config</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">local_route</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">virtual_hosts</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backend</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">domains</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">routes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">route</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">cluster</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">service</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">http_filters</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">envoy.filters.http.jwt_authn</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">typed_config</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">providers</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">provider_azad</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">issuer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://login.microsoftonline.com/&lt;TenantID&gt;/v2.0</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">audiences</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&lt;ClientID&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">forward</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">remote_jwks</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">http_uri</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#F07178;">uri</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://login.microsoftonline.com/&lt;TenantID&gt;/discovery/v2.0/keys</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#F07178;">cluster</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">azad</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#F07178;">timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10s</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">cache_duration</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#F07178;">seconds</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/health</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/common</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">requires</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">provider_and_audiences</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">provider_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">provider_azad</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">audiences</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">&lt;ClientID&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/workspaces</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">requires</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">provider_and_audiences</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">provider_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">provider_azad</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">audiences</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">&lt;ClientID&gt;</span></span>
<span class="line"></span></code></pre></div><p>So we&#39;ve done quite a bit here...<br> We&#39;re specifying that we want to match all domains <code>[*]</code> with routes <code>/</code> and we want to route it to a cluster named <em><strong>service</strong></em>.<br> On top of this we&#39;ve added a http_filter which will carry out our authn, this will be routed to our <code>azad</code> cluster.<br> In the filter we provide the tenant id and aud of our <strong>my-demo-app</strong> app registration.</p><p>We&#39;ve also added in some rules to match against, now I could probably do this better, like incorporate regex, but I didn&#39;t quite get that working, so all we&#39;re specifying is <code>/common</code> and <code>/workspaces</code> require token validating.<br> My health endpoint however does not have <code>provider_and_audiences</code> defined, thus allows for unauthenticated requests.</p><p>Under the <code>http_filters:</code> we&#39;ll also add our authz filter.</p><p><code>envoy/config.yaml:</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">envoy.ext_authz</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">typed_config</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">transport_api_version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">V3</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">with_request_body</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">max_request_bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8192</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">allow_partial_message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">failure_mode_allow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">grpc_service</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">google_grpc</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">target_uri</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">opa:9191</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">stat_prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ext_authz</span></span>
<span class="line"></span></code></pre></div><p>Key thing to note here is our target uri which is opa, and the <code>plugins.envoy_ext_authz_grpc.addr</code> we supply to our OPA pod, Im going to use <code>9191</code>, we&#39;ll need to specify set this in our docker-compose later when we setup OPA.</p><p>Note there is a <code>envoy.filters.http.router</code> which just propagates requests to correct cluster.</p><p>Now we declare our clusters, <code>service</code> and <code>azad</code> respectively. Both of these require an address and port number, in the case of our dummy-api its the service name we specified in our docker-compose.<br> For azad cluster it will be the Azure AD login page <code>login.microsoftonline.com</code>.</p><p><code>envoy/config.yaml:</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">clusters</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">service</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">connect_timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">0.25s</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">strict_dns</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">lb_policy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">round_robin</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">load_assignment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">cluster_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">service</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">endpoints</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">lb_endpoints</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">endpoint</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">socket_address</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dummy-api</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">port_value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">azad</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">connect_timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">100s</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">strict_dns</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">lb_policy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">round_robin</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">load_assignment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">cluster_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">azad</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">endpoints</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">lb_endpoints</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">endpoint</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">socket_address</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">login.microsoftonline.com</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#F07178;">port_value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">443</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">transport_socket</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">envoy.transport_sockets.tls</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">typed_config</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">sni</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">login.microsoftonline.com</span></span>
<span class="line"></span></code></pre></div><p>Now under services we&#39;re going to add our envoy services, mounting the config.yaml file and port-forwarding to the listeners.</p><p><code>docker-compose.yml</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">envoy</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">envoyproxy/envoy:v1.23-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./envoy/config.yaml:/etc/envoy/envoy.yaml</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5200:8000</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5201:8001</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="opa" tabindex="-1">OPA <a class="header-anchor" href="#opa" aria-label="Permalink to &quot;OPA&quot;">​</a></h3><p>Ok for OPA all we need is a simple policy.rego file, remember example is in the <a href="https://github.com/podedra92/opa-envoy" target="_blank" rel="noreferrer">repo</a>.</p><p>So I&#39;m going to just paste in th rego with inline comments, as hopefully its self explanatory</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">envoy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">authz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Importing required modules</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> input</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">attributes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">http as http_request</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> input</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">parsed_path</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Default deny policy</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> allow </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Rule to allow GET requests to path starting with </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">health</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">allow </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    parsed_path</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">health</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    http_request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">method </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Rule to allow GET requests to path starting with </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">allow </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    parsed_path</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    http_request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">method </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Rule to check required roles </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> accessing resource</span></span>
<span class="line"><span style="color:#A6ACCD;">allow </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    required_roles</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Rule to define required roles </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> accessing resource</span></span>
<span class="line"><span style="color:#A6ACCD;">required_roles</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    perm </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> role_perms</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">claims</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">roles</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">]][</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    perm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">method </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> http_request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">method</span></span>
<span class="line"><span style="color:#A6ACCD;">    perm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> http_request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Decoding JWT bearer token and extracting claims</span></span>
<span class="line"><span style="color:#A6ACCD;">claims </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> payload </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> payload</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">jwt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bearer_token</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Extracting JWT bearer token from authorization header</span></span>
<span class="line"><span style="color:#A6ACCD;">bearer_token </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> t </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    v </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> http_request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">headers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">authorization</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">startswith</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bearer </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    t </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">substring</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bearer </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># Mapping of roles to permissions</span></span>
<span class="line"><span style="color:#A6ACCD;">role_perms </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">team1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/workspaces/1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/workspaces/2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">team2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/workspaces/2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Now under services we&#39;re going to add our OPA service, mounting the rego file and remembering to set our <code>plugins.envoy_ext_authz_grpc.addr to 9191</code>.</p><p><code>docker-compose.yml</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">opa</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openpolicyagent/opa:latest-envoy</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./opa/policy.rego:/etc/policy.rego</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">command</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--server</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--log-level=debug</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--log-format=json-pretty</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--set=plugins.envoy_ext_authz_grpc.addr=:9191</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--set=decision_logs.console=true</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--set=plugins.envoy_ext_authz_grpc.path=envoy/authz/allow</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/policy.rego</span></span>
<span class="line"></span></code></pre></div><h2 id="test" tabindex="-1">Test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;Test&quot;">​</a></h2><p>With all our services defined and policies in place, I&#39;m just going run <code>docker-compose up</code></p><p>We should see our pods running, now lets do a GET request to <code>http://localhost:5200/common</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># REQ:</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:</span><span style="color:#F78C6C;">5200</span><span style="color:#C3E88D;">/common</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># RESP:</span></span>
<span class="line"><span style="color:#F78C6C;">401</span><span style="color:#A6ACCD;"> Unauthorized</span></span>
<span class="line"><span style="color:#FFCB6B;">Jwt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">missing</span></span>
<span class="line"></span></code></pre></div><p>Good so as expected when there isn&#39;t a token provided envoy will return a 401.</p><h3 id="token-time" tabindex="-1">Token time <a class="header-anchor" href="#token-time" aria-label="Permalink to &quot;Token time&quot;">​</a></h3><p>Lets retrieve our token for Team 1 and add that in our request:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># REQ:</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:</span><span style="color:#F78C6C;">5200</span><span style="color:#C3E88D;">/common</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-H</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Authorization: Bearer eyJ0eXAiOi...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># RESP:</span></span>
<span class="line"><span style="color:#F78C6C;">200</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Now lets try access workspace 1 &amp; 2:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># REQ:</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:</span><span style="color:#F78C6C;">5200</span><span style="color:#C3E88D;">/workspaces/</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-H</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Authorization: Bearer eyJ0eXAiOi...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># RESP:</span></span>
<span class="line"><span style="color:#F78C6C;">200</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">You have access to workspace 1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># REQ:</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:</span><span style="color:#F78C6C;">5200</span><span style="color:#C3E88D;">/workspaces/</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-H</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Authorization: Bearer eyJ0eXAiOi...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># RESP:</span></span>
<span class="line"><span style="color:#F78C6C;">200</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">You have access to workspace 2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>All good so far... Workspace 3?</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># REQ:</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:</span><span style="color:#F78C6C;">5200</span><span style="color:#C3E88D;">/workspaces/</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-H</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Authorization: Bearer eyJ0eXAiOi...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># RESP:</span></span>
<span class="line"><span style="color:#F78C6C;">403</span></span>
<span class="line"></span></code></pre></div><p><img src="`+o+'" alt="h&amp;s"></p><p>As expected Team 1 is forbidden from accessing workspace 3!</p><p>And carrying out the same validation for Team2 (remember to update the credentials when retrieving the token).</p><p>We should get 200 for <code>/common</code> and <code>/workspaces/2</code>, and a 403 for everything else.</p><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>We&#39;ve successfully implemented Authentication and Authorisation via a quick PoC using OPA and Envoy.<br> There are no doubt improvements to be made to both policies and envoy configuration, but hopefully this was a useful quick go to for getting started.</p>',69),c=[t];function r(D,y,C,F,i,A){return n(),a("div",null,c)}const h=s(e,[["render",r]]);export{u as __pageData,h as default};
